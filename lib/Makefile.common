HSCFILES= $(wildcard *.hsc HaskellPU/*.hsc)
HSC= $(HSCFILES:.hsc=.hs)
HSCOBJS= $(HSCFILES:.hsc=.o)

CFILES= $(wildcard *.c HaskellPU/*.c BLAS/*.c HaskellPU/Data/*.c)
OBJS= $(CFILES:.c=.o)

HSFILES= $(wildcard *.hs HaskellPU/*.hs BLAS/*.hs HaskellPU/Data/*.hs)
HSOBJS= $(HSFILES:.hs=.o)

CUFILES= $(wildcard BLAS/*.cu HaskellPU/Data/*.cu)
CUOBJS= $(CUFILES:.cu=.o)

GHC=ghc -O -rtsopts -threaded -XFlexibleInstances -XMultiParamTypeClasses -XFunctionalDependencies `pkg-config libstarpu --libs --cflags` -lblas -llapack -L$(CUBLASLIB) -lcublas -lcudart

%.hs: %.hsc
	@hsc2hs --cflag=`pkg-config libstarpu --cflags-only-I` -I$(CUBLASINC) $<

%.o: %.cu
	nvcc -c -o $@ $<

%.o: %.c
	gcc -Wall -c -o $@ `pkg-config libstarpu --cflags-only-I` -I$(CUBLASINC) $<

all: $(HSC) $(OBJS) $(CUOBJS)
	${GHC} Test.hs $(OBJS) $(CUOBJS)
	

clean:
	@rm -f *.hi BLAS/*.hi HaskellPU/*.hi HaskellPU/Data/*.hi Test Tests $(HSC) $(OBJS) $(HSOBJS) $(HSCOBJS) $(CUOBJS) *.trace *.data *.log *.dot *.pdf *.txt
	@rm -rf doc

doc: $(HSC)
	@mkdir -p doc/
	haddock -h -o doc/ --optghc=-XMultiParamTypeClasses --optghc=-XFunctionalDependencies --optghc=-XFlexibleInstances $(HSFILES)
  
tests: $(HSC) $(OBJS) $(CUOBJS)
	${GHC} Tests.hs $(OBJS) $(CUOBJS)
	./Tests
